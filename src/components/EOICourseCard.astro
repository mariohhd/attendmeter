---
import Thermometer from './Thermometer.astro'
import type { EOICourse, EOIAttendanceStats } from '../types/attendance'
import { 
  formatDateShort, 
  getEOIAttendanceColor, 
  getAttendanceStatusText,
  getDayNameInSpanish 
} from '../utils/attendance'
import { getUpcomingClasses, meetsEOIAttendanceRequirement } from '../utils/eoi-calendar'

interface Props {
  course: EOICourse
  stats: EOIAttendanceStats
}

const { course, stats } = Astro.props

const upcomingClasses = getUpcomingClasses(course, 14) // PrÃ³ximas 2 semanas
const meetsRequirement = meetsEOIAttendanceRequirement(stats)
const statusText = getAttendanceStatusText(stats.validAttendancePercentage, true)
const scheduleText = course.schedule.days
  .map(day => getDayNameInSpanish(day))
  .join(' y ')
---

<div class="eoi-course-card" data-course-id={course.id}>
  <div class="course-header" style={`border-color: ${course.color}`}>
    <div class="course-title-section">
      <h3 class="course-name">{course.name}</h3>
      <div class="course-meta">
        <span class="language-level">{course.language} - {course.level}</span>
        <span class="teacher">Prof. {course.teacher}</span>
        <span class="schedule">{scheduleText} {course.schedule.startTime}-{course.schedule.endTime}</span>
        {course.classroom && <span class="classroom">Aula {course.classroom}</span>}
      </div>
    </div>
    
    <div class="requirement-badge" class:list={[{ 'meets-requirement': meetsRequirement, 'below-requirement': !meetsRequirement }]}>
      {meetsRequirement ? 'âœ“ Cumple' : 'âš  No cumple'} (mÃ­n. 65%)
    </div>
  </div>

  <div class="course-content">
    <div class="stats-section">
      <div class="thermometer-container">
        <Thermometer 
          percentage={stats.validAttendancePercentage}
          label="Asistencia VÃ¡lida"
          target={65}
          height={200}
          color={getEOIAttendanceColor(stats.validAttendancePercentage)}
        />
        <div class="status-text">{statusText}</div>
      </div>
      
      <div class="detailed-stats">
        <div class="stat-card">
          <div class="stat-number">{stats.attendedSessions}</div>
          <div class="stat-label">Asistidas</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">{stats.scheduledSessions}</div>
          <div class="stat-label">Programadas</div>
        </div>
        <div class="stat-card warning">
          <div class="stat-number">{stats.cancelledSessions}</div>
          <div class="stat-label">Canceladas</div>
        </div>
        <div class="stat-card secondary">
          <div class="stat-number">{stats.makeupSessions}</div>
          <div class="stat-label">RecuperaciÃ³n</div>
        </div>
      </div>
    </div>

    <div class="calendar-section">
      <div class="section-header">
        <h4>PrÃ³ximas Clases</h4>
        <div class="calendar-actions">
          <button class="add-session-btn" data-course-id={course.id}>
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="12" y1="5" x2="12" y2="19"></line>
              <line x1="5" y1="12" x2="19" y2="12"></line>
            </svg>
            Marcar Asistencia
          </button>
          <button class="teacher-absent-btn" data-course-id={course.id}>
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M18 6L6 18M6 6l12 12"></path>
            </svg>
            Profesor Ausente
          </button>
        </div>
      </div>

      <div class="upcoming-classes">
        {upcomingClasses.slice(0, 6).map(session => (
          <div class="class-item" data-session-id={session.id}>
            <div class="class-date">
              <div class="day">{getDayNameInSpanish(session.date.getDay())}</div>
              <div class="date">{formatDateShort(session.date)}</div>
            </div>
            <div class="class-status">
              <button 
                class={`status-toggle ${session.attended ? 'attended' : 'pending'}`}
                data-course-id={course.id}
                data-session-id={session.id}
                data-attended={session.attended}
              >
                {session.attended ? 'âœ“ AsistÃ­' : 'â—‹ Pendiente'}
              </button>
            </div>
            {session.notes && (
              <div class="class-notes">{session.notes}</div>
            )}
          </div>
        ))}
        {upcomingClasses.length === 0 && (
          <div class="no-upcoming">
            <span>ðŸ“… No hay clases programadas prÃ³ximamente</span>
          </div>
        )}
      </div>

      <div class="recent-sessions">
        <h4>Historial Reciente</h4>
        <div class="sessions-list">
          {course.sessions
            .filter(session => session.date <= new Date())
            .slice(-5)
            .reverse()
            .map(session => (
            <div class="session-item" data-session-id={session.id}>
              <div class="session-date">
                <span class="date">{formatDateShort(session.date)}</span>
                <span class="type">{
                  session.sessionType === 'regular' ? 'Clase' :
                  session.sessionType === 'makeup' ? 'RecuperaciÃ³n' :
                  session.sessionType === 'exam' ? 'Examen' :
                  'Cancelada'
                }</span>
              </div>
              <div class="session-status">
                {session.sessionType === 'cancelled' || session.isHoliday || session.teacherAbsent ? (
                  <span class="cancelled">Cancelada</span>
                ) : (
                  <button 
                    class={`status-toggle ${session.attended ? 'attended' : 'missed'}`}
                    data-course-id={course.id}
                    data-session-id={session.id}
                    data-attended={session.attended}
                  >
                    {session.attended ? 'âœ“ AsistÃ­' : 'âœ— FaltÃ©'}
                  </button>
                )}
              </div>
              {session.notes && (
                <div class="session-notes">{session.notes}</div>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>

  <!-- Monthly Progress Chart -->
  <div class="progress-chart">
    <h4>Progreso Mensual</h4>
    <div class="months-grid">
      {stats.attendanceHistory.map(month => (
        <div class="month-item">
          <div class="month-name">{month.month.split(' ')[0]}</div>
          <div 
            class="month-bar" 
            style={`height: ${month.percentage}%; background-color: ${getEOIAttendanceColor(month.percentage)}`}
            title={`${month.percentage}% (${month.attendedCount}/${month.scheduledCount})`}
          ></div>
          <div class="month-percentage">{month.percentage}%</div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .eoi-course-card {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    margin-bottom: 2rem;
  }

  .eoi-course-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  .course-header {
    padding: 2rem;
    border-left: 6px solid #6366f1;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
  }

  .course-title-section {
    flex: 1;
  }

  .course-name {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1e293b;
    margin: 0 0 1rem 0;
  }

  .course-meta {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .course-meta span {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 500;
  }

  .language-level {
    color: #3b82f6 !important;
    font-weight: 600 !important;
  }

  .requirement-badge {
    padding: 0.75rem 1rem;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 600;
    text-align: center;
    min-width: 120px;
  }

  .requirement-badge.meets-requirement {
    background: #dcfce7;
    color: #166534;
    border: 2px solid #bbf7d0;
  }

  .requirement-badge.below-requirement {
    background: #fef2f2;
    color: #991b1b;
    border: 2px solid #fecaca;
  }

  .course-content {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 2rem;
    padding: 2rem;
  }

  .stats-section {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .thermometer-container {
    text-align: center;
  }

  .status-text {
    margin-top: 1rem;
    font-size: 1rem;
    font-weight: 600;
    color: #374151;
  }

  .detailed-stats {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  .stat-card {
    background: #f8fafc;
    padding: 1rem;
    border-radius: 8px;
    text-align: center;
    border: 2px solid #e2e8f0;
  }

  .stat-card.warning {
    border-color: #fbbf24;
    background: #fffbeb;
  }

  .stat-card.secondary {
    border-color: #8b5cf6;
    background: #faf5ff;
  }

  .stat-number {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1f2937;
  }

  .stat-label {
    font-size: 0.75rem;
    color: #6b7280;
    margin-top: 0.25rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .calendar-section {
    min-width: 0;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .section-header h4 {
    font-size: 1.125rem;
    font-weight: 600;
    color: #374151;
    margin: 0;
  }

  .calendar-actions {
    display: flex;
    gap: 0.5rem;
  }

  .add-session-btn, .teacher-absent-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    border: none;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .add-session-btn {
    background: #3b82f6;
    color: white;
  }

  .add-session-btn:hover {
    background: #2563eb;
  }

  .teacher-absent-btn {
    background: #f3f4f6;
    color: #374151;
    border: 1px solid #d1d5db;
  }

  .teacher-absent-btn:hover {
    background: #e5e7eb;
  }

  .upcoming-classes, .sessions-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 2rem;
  }

  .class-item, .session-item {
    display: grid;
    grid-template-columns: auto 1fr auto;
    gap: 1rem;
    align-items: center;
    padding: 1rem;
    background: #f8fafc;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    transition: all 0.2s ease;
  }

  .class-item:hover, .session-item:hover {
    background: #f1f5f9;
    border-color: #cbd5e1;
  }

  .class-date {
    text-align: center;
    min-width: 80px;
  }

  .class-date .day {
    font-size: 0.75rem;
    color: #6b7280;
    text-transform: uppercase;
    font-weight: 600;
  }

  .class-date .date {
    font-size: 0.875rem;
    font-weight: 600;
    color: #1f2937;
  }

  .session-date {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    min-width: 80px;
  }

  .session-date .date {
    font-size: 0.875rem;
    font-weight: 600;
    color: #1f2937;
  }

  .session-date .type {
    font-size: 0.75rem;
    color: #6b7280;
    text-transform: uppercase;
  }

  .status-toggle {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    text-transform: uppercase;
    letter-spacing: 0.025em;
  }

  .status-toggle.attended {
    background: #dcfce7;
    color: #166534;
    border: 1px solid #bbf7d0;
  }

  .status-toggle.missed {
    background: #fef2f2;
    color: #991b1b;
    border: 1px solid #fecaca;
  }

  .status-toggle.pending {
    background: #fef3c7;
    color: #92400e;
    border: 1px solid #fde68a;
  }

  .cancelled {
    padding: 0.5rem 1rem;
    background: #f3f4f6;
    color: #6b7280;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
  }

  .class-notes, .session-notes {
    grid-column: 1 / -1;
    font-size: 0.875rem;
    color: #6b7280;
    font-style: italic;
    margin-top: 0.5rem;
    padding: 0.5rem;
    background: #f1f5f9;
    border-radius: 4px;
  }

  .no-upcoming {
    text-align: center;
    padding: 2rem;
    color: #9ca3af;
    font-style: italic;
  }

  .progress-chart {
    padding: 2rem;
    border-top: 1px solid #e5e7eb;
    background: #fafafa;
  }

  .progress-chart h4 {
    margin: 0 0 1rem 0;
    font-size: 1rem;
    color: #374151;
  }

  .months-grid {
    display: flex;
    gap: 1rem;
    overflow-x: auto;
    padding-bottom: 0.5rem;
  }

  .month-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    min-width: 60px;
  }

  .month-name {
    font-size: 0.75rem;
    color: #6b7280;
    font-weight: 600;
    text-transform: uppercase;
  }

  .month-bar {
    width: 20px;
    min-height: 4px;
    max-height: 60px;
    border-radius: 2px;
    transition: all 0.2s ease;
  }

  .month-percentage {
    font-size: 0.75rem;
    font-weight: 600;
    color: #374151;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .course-content {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .course-header {
      flex-direction: column;
      align-items: stretch;
    }

    .calendar-actions {
      flex-direction: column;
    }

    .detailed-stats {
      grid-template-columns: 1fr;
    }

    .class-item, .session-item {
      grid-template-columns: 1fr;
      gap: 0.5rem;
    }
  }
</style>